import React, { useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import {
  getMovies,
  getMoreMovies,
  clearError,
  deleteMovie,
  selectMovies,
  selectError,
  selectResultsEmpty,
  selectPageInfo,
} from './movieSlice';
import { MovieInfo } from './MovieInfo';
import { makeStyles } from '@material-ui/core/styles';
import {
  Grid,
  Button,
  TextField,
  Dialog,
  DialogActions,
  DialogTitle,
  DialogContent,
  DialogContentText,
} from '@material-ui/core';
import ArrowForwardIcon from '@material-ui/icons/ArrowForward';

const useStyles = makeStyles(theme => ({
  root: {
    flexGrow: 1,
  },
  button: {
    margin: theme.spacing(1),
  },
  text: {
    margin: theme.spacing(3),
  },
}));

export function MovieSearch() {
  const movies = useSelector(selectMovies);
  const error = useSelector(selectError);
  const resultsEmpty = useSelector(selectResultsEmpty);
  const pageInfo = useSelector(selectPageInfo);

  const dispatch = useDispatch();

  const [searchTerm, setSearchTerm] = useState('');
  const [dialog, setDialog] = useState({
    open: false,
    message: '',
  });

  const handleDialogOpen = message => {
    setDialog({open: true, message: message});
  };

  const handleDialogClose = () => {
    setDialog({open: false, message: ''});
  };

  const deleteMovieById = imdbID => {
    dispatch(deleteMovie(imdbID));
  };

  const handleSubmit = () => {
    if (searchTerm === '') {
      handleDialogOpen('Search term is required');
    } else {
      dispatch(getMovies(searchTerm));
    }
  }

  const classes = useStyles();

  return (
    <div>
      {/*Movie search and submit button*/}
      <TextField
        value={searchTerm}
        label="Search for a movie"
        onChange={e => setSearchTerm(e.target.value)}
        onKeyPress={e => {
          if (e.key === 'Enter') {
            handleSubmit();
          }
        }}
      />
      <Button
        variant="contained"
        color="primary"
        className={classes.button}
        startIcon={<ArrowForwardIcon />}
        onClick={handleSubmit}
      >
        Submit
      </Button>

      {/*Error message dialog -- for messages generated by this component (e.g. missing search term)*/}
      <Dialog
        open={dialog.open}
        onClose={handleDialogClose}
      >
        <DialogTitle>{dialog.message}</DialogTitle>
        <DialogActions>
          <Button onClick={handleDialogClose} color="primary">
            OK
          </Button>
        </DialogActions>
      </Dialog>

      {/*Error message dialog -- for displaying API error messages*/}
      <Dialog
        open={error !== false}
        onClose={() => dispatch(clearError())}
      >
        <DialogTitle>Error retrieving movies</DialogTitle>
        <DialogContent>
          <DialogContentText>{error}</DialogContentText>
        </DialogContent>
        <DialogActions>
          <Button onClick={() => dispatch(clearError())} color="primary">
            OK
          </Button>
        </DialogActions>
      </Dialog>

      {/*Display movies*/}
      <div className={classes.root}>
          <Grid
            container
            spacing={2}
            alignItems="center"
            justify="center"
          >
            {
              movies.map((movie, i) => {
                return(
                  <MovieInfo
                    key = {i}
                    title = {movie.Title}
                    year = {movie.Year}
                    poster = {movie.Poster}
                    imdbID = {movie.imdbID}
                    deleteMovie = {deleteMovieById}
                  />
                )
              })
            }
            {resultsEmpty && <div className={classes.text}>No movies found for your search</div>}
          </Grid>
      </div>

      {/*Load more movies*/}
      {(movies.length > 0 && pageInfo.currentPage < pageInfo.numPages) &&
        <Button
          variant="contained"
          color="primary"
          className={classes.button}
          onClick={() => dispatch(getMoreMovies(searchTerm))}
        >
          Load more movies
        </Button>
      }
    </div>
  );
}
